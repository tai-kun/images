name: ExpressVPN

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'ExpressVPN のバージョン (e.g. 3.75.0.0)'
        required: true
      commit-hash:
        description: 'Misioslav/expressvpn の master ブランチのコミットハッシュ'
        required: true
      debian:
        description: 'Debian のディストリビューション'
        required: false
        default: 'bookworm' # Debian 12
      alias:
        description: 'タグに付ける別名、カンマ区切り (e.g. latest)'
        required: false
        default: ''
      push:
        description: 'push するかどうか'
        required: false
        type: boolean
        default: true

permissions:
  contents: read
  packages: write

defaults:
  run:
    shell: bash -euo pipefail {0}

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'タグを準備'
        id: tags
        run: echo "tags=$(./tags.sh)" >>$GITHUB_OUTPUT
        env:
          PACKAGE: expressvpn
          CSV_LIST: "${{ inputs.version }},${{ inputs.alias }}"
          REPO_OWNER: ${{ github.repository_owner }}

      - name: 'スクリプトの準備'
        id: params
        working-directory: expressvpn
        run: |
          git clone --branch master https://github.com/Misioslav/expressvpn.git source
          cp Dockerfile source/Dockerfile
          cd source
          git checkout ${{ inputs.commit-hash }}

      - uses: docker/build-push-action@v5
        with:
          platforms: ${{ steps.buildx.outputs.platforms }}
          context: expressvpn/source
          build-args: |
            NUM=${{ inputs.version }}
            DISTRIBUTION=${{ inputs.debian }}
          tags: ${{ steps.tags.outputs.tags }}
          push: ${{ inputs.push }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
